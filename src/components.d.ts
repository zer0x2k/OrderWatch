/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { RouterHistory } from "@stencil-community/router";
export namespace Components {
    interface AppHome {
    }
    interface AppNav {
    }
    interface AppOrderbook {
        "match": any;
    }
    interface AppRoot {
    }
    interface LoadingSpinner {
        "isLoading": boolean;
    }
    interface MarketTable {
        "history": RouterHistory;
    }
    interface OrderbookScatter {
        "symbol": string;
    }
    interface OrderbookTable {
        "symbol": string;
    }
    interface OrderbookTicker {
        "history": RouterHistory;
        "symbol": string;
    }
    interface OrderbookVolume {
        "symbol": string;
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppNavElement extends Components.AppNav, HTMLStencilElement {
    }
    var HTMLAppNavElement: {
        prototype: HTMLAppNavElement;
        new (): HTMLAppNavElement;
    };
    interface HTMLAppOrderbookElement extends Components.AppOrderbook, HTMLStencilElement {
    }
    var HTMLAppOrderbookElement: {
        prototype: HTMLAppOrderbookElement;
        new (): HTMLAppOrderbookElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLLoadingSpinnerElement extends Components.LoadingSpinner, HTMLStencilElement {
    }
    var HTMLLoadingSpinnerElement: {
        prototype: HTMLLoadingSpinnerElement;
        new (): HTMLLoadingSpinnerElement;
    };
    interface HTMLMarketTableElement extends Components.MarketTable, HTMLStencilElement {
    }
    var HTMLMarketTableElement: {
        prototype: HTMLMarketTableElement;
        new (): HTMLMarketTableElement;
    };
    interface HTMLOrderbookScatterElement extends Components.OrderbookScatter, HTMLStencilElement {
    }
    var HTMLOrderbookScatterElement: {
        prototype: HTMLOrderbookScatterElement;
        new (): HTMLOrderbookScatterElement;
    };
    interface HTMLOrderbookTableElement extends Components.OrderbookTable, HTMLStencilElement {
    }
    var HTMLOrderbookTableElement: {
        prototype: HTMLOrderbookTableElement;
        new (): HTMLOrderbookTableElement;
    };
    interface HTMLOrderbookTickerElement extends Components.OrderbookTicker, HTMLStencilElement {
    }
    var HTMLOrderbookTickerElement: {
        prototype: HTMLOrderbookTickerElement;
        new (): HTMLOrderbookTickerElement;
    };
    interface HTMLOrderbookVolumeElement extends Components.OrderbookVolume, HTMLStencilElement {
    }
    var HTMLOrderbookVolumeElement: {
        prototype: HTMLOrderbookVolumeElement;
        new (): HTMLOrderbookVolumeElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-nav": HTMLAppNavElement;
        "app-orderbook": HTMLAppOrderbookElement;
        "app-root": HTMLAppRootElement;
        "loading-spinner": HTMLLoadingSpinnerElement;
        "market-table": HTMLMarketTableElement;
        "orderbook-scatter": HTMLOrderbookScatterElement;
        "orderbook-table": HTMLOrderbookTableElement;
        "orderbook-ticker": HTMLOrderbookTickerElement;
        "orderbook-volume": HTMLOrderbookVolumeElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppNav {
    }
    interface AppOrderbook {
        "match"?: any;
    }
    interface AppRoot {
    }
    interface LoadingSpinner {
        "isLoading"?: boolean;
    }
    interface MarketTable {
        "history"?: RouterHistory;
    }
    interface OrderbookScatter {
        "symbol"?: string;
    }
    interface OrderbookTable {
        "symbol"?: string;
    }
    interface OrderbookTicker {
        "history"?: RouterHistory;
        "symbol"?: string;
    }
    interface OrderbookVolume {
        "symbol"?: string;
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-nav": AppNav;
        "app-orderbook": AppOrderbook;
        "app-root": AppRoot;
        "loading-spinner": LoadingSpinner;
        "market-table": MarketTable;
        "orderbook-scatter": OrderbookScatter;
        "orderbook-table": OrderbookTable;
        "orderbook-ticker": OrderbookTicker;
        "orderbook-volume": OrderbookVolume;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-nav": LocalJSX.AppNav & JSXBase.HTMLAttributes<HTMLAppNavElement>;
            "app-orderbook": LocalJSX.AppOrderbook & JSXBase.HTMLAttributes<HTMLAppOrderbookElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "loading-spinner": LocalJSX.LoadingSpinner & JSXBase.HTMLAttributes<HTMLLoadingSpinnerElement>;
            "market-table": LocalJSX.MarketTable & JSXBase.HTMLAttributes<HTMLMarketTableElement>;
            "orderbook-scatter": LocalJSX.OrderbookScatter & JSXBase.HTMLAttributes<HTMLOrderbookScatterElement>;
            "orderbook-table": LocalJSX.OrderbookTable & JSXBase.HTMLAttributes<HTMLOrderbookTableElement>;
            "orderbook-ticker": LocalJSX.OrderbookTicker & JSXBase.HTMLAttributes<HTMLOrderbookTickerElement>;
            "orderbook-volume": LocalJSX.OrderbookVolume & JSXBase.HTMLAttributes<HTMLOrderbookVolumeElement>;
        }
    }
}
